apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.posts"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 3
        versionName "1.0.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

     // Support Design
     implementation "com.google.android.material:material:${android_support_version}"

     // RecyclerView
     implementation "androidx.recyclerview:recyclerview:${android_support_version}"

     // Constraint Layout
     implementation "androidx.constraintlayout:constraintlayout:${constraintlayout_version}"

     // LiveData & ViewModel
     implementation "androidx.lifecycle:lifecycle-extensions:${lifecycle_version}"

     // Room
     implementation "androidx.room:room-runtime:${room_version}"
     kapt "androidx.room:room-compiler:${room_version}"

     // Retrofit
     implementation "com.squareup.retrofit2:retrofit:${retrofit_version}"
     implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofit_version}"
     implementation "com.squareup.retrofit2:converter-moshi:${retrofit_version}"

     //Rx
     implementation "io.reactivex.rxjava2:rxjava:2.2.2"
     implementation "io.reactivex.rxjava2:rxandroid:2.1.0"


    //RxPaper2
    implementation "com.github.pakoito:RxPaper2:${rxpaper_version}"

    //koin Dependency Injection
    implementation "org.koin:koin-android:${koin_version}"
    implementation "org.koin:koin-androidx-viewmodel:${koin_version}"

    //Glide
    api "com.github.bumptech.glide:glide:${glide_version}"
    kapt "com.github.bumptech.glide:compiler:${glide_version}"

    //okhttp3
    implementation "com.squareup.okhttp3:logging-interceptor:${loggingInterceptor_version}"

    //orchestrator
    androidTestUtil 'com.android.support.test:orchestrator:1.0.1'

 //   configurations.all { resolutionStrategy { force 'org.objenesis:objenesis:2.1' } }

    //Testing
    androidTestImplementation "androidx.test:rules:${androidtest_version}"
    androidTestImplementation "androidx.test:runner:${androidtest_version}"

    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoKotlin_version}"
    testImplementation "org.mockito:mockito-inline:${mockitoInline_version}"
    testImplementation "androidx.arch.core:core-testing:${lifecycle_version}"

    testImplementation "org.mockito:mockito-inline:${mockitoInline_version}"
    androidTestImplementation "org.mockito:mockito-android:${mockitoAndroid_version}"
    testImplementation "org.mockito:mockito-core:${mockitoInline_version}"

//    testImplementation "org.powermock:powermock-core:${powermock_version}"
//    testImplementation "org.powermock:powermock-module-junit4:${powermock_version}"
//    testImplementation "org.powermock:powermock-api-mockito2:${powermock_version}"
}


configurations {
    ktlint
}

dependencies {
    ktlint "com.github.shyiko:ktlint:0.29.0"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}

repositories {
    google()
}

//tasks.withType(org.jetbrains.kotlin.gradle.tasks.AbstractKotlinCompile).all {
//    kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi"]
//}
